name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
        
        
    - name: Get Valheim version id
      id: valheimversion
      run: echo "::set-output name=valheimversion::$(curl -s https://api.steamcmd.net/v1/info/896660 | jq -r ".data.\"896660\".depots.branches.public.buildid")"

    - name: Get the version
      id: get_version
      run: |
        echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
        echo ::set-output name=VERSION_NUMBER::${GITHUB_REF/refs\/tags\/v/}
        
    - name: Install NuGet
      uses: nuget/setup-nuget@v1
  
    #- name: Setup .NET
    #  uses: actions/setup-dotnet@v2
    #  with:
     #   dotnet-version: 6.0.x
    - name: Restore dependencies
      run: |
        dotnet restore
        nuget restore
        dotnet tool restore
        
    - name: Get build commands
      run: |
          sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
          echo "deb https://download.mono-project.com/repo/ubuntu stable-focal main" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list
          wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
          sudo dpkg -i packages-microsoft-prod.deb
          sudo apt-get update
          sudo apt-get install -y mono-roslyn mono-complete mono-dbg msbuild unzip dirmngr dotnet-sdk-5.0 dotnet-runtime-5.0
          sudo apt-get install -y dotnet-sdk-6.0
          rm -rf ~/VHINSTALL/valheim_Data/Managed/publicized_assemblies
          rm -rf ~/VHINSTALL/valheim_server_Data/Managed/publicized_assemblies
          rm -rf ~/VHINSTALL/valheim_Data/Managed/publicized_assemblies
          rm -rf ~/VHINSTALL/BepInEx/plugins/MMHOOK 
        
    - name: Cache Valheim
      id: cachevalheim
      uses: actions/cache@v2
      with:
        path: ~/VHINSTALL
        key: ${{ steps.valheimversion.outputs.valheimversion }}-${{ hashFiles('**/lockfiles') }}-BepInExPack-5.4.1901

    - name: Install SteamCMD
      uses: CyberAndrii/setup-steamcmd@v1

    - name: Prepare Valheim dependencies
      #if: steps.cachevalheim.outputs.cache-hit != 'true'
      run: |
        wget -O bepinex.zip "https://valheim.thunderstore.io/package/download/denikson/BepInExPack_Valheim/5.4.1901/"
        unzip bepinex.zip -d ~/BepInExRaw
        steamcmd +force_install_dir ~/VHINSTALL +login anonymous +app_update 896660 validate +exit
        mv ~/VHINSTALL/valheim_server_Data/ ~/VHINSTALL/valheim_Data/
        mv ~/BepInExRaw/BepInExPack_Valheim/* ~/VHINSTALL/
        mkdir -p ~/.steam/steam/steamapps/common/
        ln -s ~/VHINSTALL/ ~/.steam/steam/steamapps/common/Valheim

        
    - name: Remove old publicized and mmhook dlls from cache
      #if: steps.cachevalheim.outputs.cache-hit != 'true'
      run: |
        rm -rf ~/VHINSTALL/valheim_Data/Managed/publicized_assemblies
        rm -rf ~/VHINSTALL/valheim_server_Data/Managed/publicized_assemblies
        rm -rf ~/VHINSTALL/valheim_Data/Managed/publicized_assemblies
        rm -rf ~/VHINSTALL/BepInEx/plugins/MMHOOK 
        
    - name: Do Publicize things
      #if: steps.cachevalheim.outputs.cache-hit != 'true'
      run: |
        wget https://github.com/iRebbok/APublicizer/releases/download/1.0.3/native-linux-x64-release.tar.gz
        mkdir ~/assembpublicizer
        tar -xf native-linux-x64-release.tar.gz -C ~/assembpublicizer
        mkdir -p ~/VHINSTALL/valheim_Data/Managed/publicized_assemblies
        ~/assembpublicizer/APublicizer ~/VHINSTALL/valheim_Data/Managed/assembly_googleanalytics.dll
        ~/assembpublicizer/APublicizer ~/VHINSTALL/valheim_Data/Managed/assembly_guiutils.dll
        ~/assembpublicizer/APublicizer ~/VHINSTALL/valheim_Data/Managed/assembly_lux.dll
        ~/assembpublicizer/APublicizer ~/VHINSTALL/valheim_Data/Managed/assembly_postprocessing.dll
        ~/assembpublicizer/APublicizer ~/VHINSTALL/valheim_Data/Managed/assembly_simplemeshcombine.dll
        ~/assembpublicizer/APublicizer ~/VHINSTALL/valheim_Data/Managed/assembly_steamworks.dll
        ~/assembpublicizer/APublicizer ~/VHINSTALL/valheim_Data/Managed/assembly_sunshafts.dll
        ~/assembpublicizer/APublicizer ~/VHINSTALL/valheim_Data/Managed/assembly_utils.dll
        ~/assembpublicizer/APublicizer ~/VHINSTALL/valheim_Data/Managed/assembly_valheim.dll
        ~/assembpublicizer/APublicizer ~/VHINSTALL/valheim_Data/Managed/Assembly-CSharp.dll
        mv ~/VHINSTALL/valheim_Data/Managed/*Publicized.dll ~/VHINSTALL/valheim_Data/Managed/publicized_assemblies/
        
        
    - name: Build
      #if: steps.cachevalheim.outputs.cache-hit != 'true'
      run: |
        msbuild ModFrame.sln /p:Configuration=Release
        
    - name: Upload a Build Artifact
      #if: steps.cachevalheim.outputs.cache-hit != 'true'
      uses: actions/upload-artifact@v3.1.0
      with:
        # Artifact name
        name: 'ModFrame.dll'
        # A file, directory or wildcard pattern that describes what to upload
        path: 'ModFrame/bin/Release/MoFrame.dll'